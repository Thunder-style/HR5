import { useState, useMemo } from 'react';

export const useExpertData = () => {
  const [expertData] = useState({
    name: "张专家",
    employeeId: "EXP2024001",
    department: "技术研发部",
    sequence: "技能序列",
    businessField: "配电专业",
    title: "三级拔尖技能专家",
    annualResult: "A",
    performanceScore: 92,
    targetScore: 88,
    departmentScore: 85
  });

  const [assessmentData] = useState([
    { year: '2022', 解决问题: 70, 工艺创新: 65, 技术标准: 75, 规范编制: 72, 工作质量: 68, 新技能应用: 60, 获得专利奖励: 65, 获得职工创新奖励: 55, 获得大众创新奖励: 58, 获得专利授权: 70, 参加技能竞赛并获奖: 45, 入选人才支持计划: 50, 获得人才荣誉或奖励: 65, 发挥人才培养作用: 60, 知识培训授课: 55, 人才交流: 58 },
    { year: '2023', 解决问题: 80, 工艺创新: 75, 技术标准: 82, 规范编制: 85, 工作质量: 78, 新技能应用: 72, 获得专利奖励: 75, 获得职工创新奖励: 68, 获得大众创新奖励: 70, 获得专利授权: 82, 参加技能竞赛并获奖: 58, 入选人才支持计划: 65, 获得人才荣誉或奖励: 75, 发挥人才培养作用: 70, 知识培训授课: 65, 人才交流: 68 },
    { year: '2024', 解决问题: 95, 工艺创新: 90, 技术标准: 92, 规范编制: 96, 工作质量: 92, 新技能应用: 88, 获得专利奖励: 90, 获得职工创新奖励: 85, 获得大众创新奖励: 87, 获得专利授权: 95, 参加技能竞赛并获奖: 80, 入选人才支持计划: 85, 获得人才荣誉或奖励: 92, 发挥人才培养作用: 85, 知识培训授课: 80, 人才交流: 82 }
  ]);

  const [batchAverageData] = useState([
    { year: '2022', 解决问题: 65, 工艺创新: 60, 技术标准: 70, 规范编制: 68, 工作质量: 65, 新技能应用: 55, 获得专利奖励: 60, 获得职工创新奖励: 50, 获得大众创新奖励: 55, 获得专利授权: 65, 参加技能竞赛并获奖: 40, 入选人才支持计划: 45, 获得人才荣誉或奖励: 60, 发挥人才培养作用: 55, 知识培训授课: 50, 人才交流: 52 },
    { year: '2023', 解决问题: 75, 工艺创新: 70, 技术标准: 78, 规范编制: 80, 工作质量: 75, 新技能应用: 68, 获得专利奖励: 70, 获得职工创新奖励: 62, 获得大众创新奖励: 65, 获得专利授权: 75, 参加技能竞赛并获奖: 52, 入选人才支持计划: 60, 获得人才荣誉或奖励: 70, 发挥人才培养作用: 65, 知识培训授课: 60, 人才交流: 62 },
    { year: '2024', 解决问题: 85, 工艺创新: 82, 技术标准: 85, 规范编制: 88, 工作质量: 85, 新技能应用: 80, 获得专利奖励: 82, 获得职工创新奖励: 78, 获得大众创新奖励: 80, 获得专利授权: 85, 参加技能竞赛并获奖: 70, 入选人才支持计划: 75, 获得人才荣誉或奖励: 82, 发挥人才培养作用: 78, 知识培训授课: 75, 人才交流: 77 }
  ]);

  const evaluationDimensions = [
    "解决问题", "工艺创新", "技术标准", "规范编制", "工作质量",
    "新技能应用", "获得专利奖励", "获得职工创新奖励", "获得大众创新奖励", "获得专利授权",
    "参加技能竞赛并获奖", "入选人才支持计划", "获得人才荣誉或奖励", "发挥人才培养作用", "知识培训授课", "人才交流"
  ];

  const averageScores = useMemo(() => {
    const averages = {};
    evaluationDimensions.forEach(dim => {
      const sum = assessmentData.reduce((acc, yearData) => acc + yearData[dim], 0);
      averages[dim] = Math.round(sum / assessmentData.length);
    });
    return averages;
  }, [assessmentData]);

  const improvementAreas = useMemo(() => {
    return Object.entries(averageScores)
      .filter(([_, score]) => score < 80)
      .sort((a, b) => a[1] - b[1])
      .slice(0, 5);
  }, [averageScores]);

  const getTrainingSuggestions = (dimension, score) => {
    if (score >= 85) return "表现优秀，继续保持";
    if (score >= 75) return "表现良好，可进一步提升";
    
    const suggestions = {
      "解决问题": "建议参加《问题分析与解决》培训课程",
      "工艺创新": "建议参加《创新方法与工具应用》培训课程",
      "技术标准": "建议学习《行业技术标准制定与实施》专题",
      "规范编制": "建议参与《技术规范编写实务》工作坊",
      "工作质量": "建议学习《质量管理与持续改进》课程",
      "新技能应用": "建议参加《前沿技术应用与实践》培训",
      "获得专利奖励": "建议学习《专利申请与知识产权保护》课程",
      "获得职工创新奖励": "建议参与《职工创新项目申报与实施》项目",
      "获得大众创新奖励": "建议学习《大众创新项目策划与执行》课程",
      "获得专利授权": "建议参加《专利撰写与申请实务》培训",
      "参加技能竞赛并获奖": "建议参与《技能竞赛备赛与参赛技巧》培训",
      "入选人才支持计划": "建议学习《人才项目申报与实施》课程",
      "获得人才荣誉或奖励": "建议参与《人才荣誉申报与评审》项目",
      "发挥人才培养作用": "建议学习《人才培养与团队建设》课程",
      "知识培训授课": "建议参加《高效培训与授课技巧》培训",
      "人才交流": "建议参与《跨部门人才交流与实践》项目"
    };
    
    return suggestions[dimension] || "建议针对性提升相关能力";
  };

  return {
    expertData,
    assessmentData,
    batchAverageData,
    evaluationDimensions,
    averageScores,
    improvementAreas,
    getTrainingSuggestions
  };
};
